<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.eigengo.monitor</groupId>
    <artifactId>parent</artifactId>
    <packaging>pom</packaging>
    <version>0.1-SNAPSHOT</version>
    <name>Monitor Parent</name>
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <scm>
        <url>git@github.com:eigengo/monitor.git</url>
        <connection>scm:git@github.com:eigengo/monitor.git</connection>
        <developerConnection>scm:git@github.com:eigengo/monitor.git</developerConnection>
        <tag>HEAD</tag>
    </scm>
    <prerequisites>
        <maven>3.0.3</maven>
    </prerequisites>

    <!--
These are the modules that make up the project. The modules will form packages (JARs, WARs and other
such beasts). Be careful not to have circular dependencies; and be sure to hide as much detail of the
module's structure as possible (members are public only if absolutely required, ...).
-->
    <modules>
        <module>output-api</module>
        <!-- List of agent modules -->
        <module>agent-akka</module>
        <module>agent-play</module>
        <module>agent-spray</module>
        <!-- Common code for the agents: configuration & similar -->
        <module>agent-common</module>
        <!-- List of output modules -->
        <module>output-statsd</module>
    </modules>

    <properties>
        <aspectj.version>1.7.3</aspectj.version>
        <aspectj.agent>${user.home}/.m2/repository/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar</aspectj.agent>

        <maven.compiler.plugin>3.1</maven.compiler.plugin>
        <maven.source.plugin>2.2.1</maven.source.plugin>
        <maven.checkstyle.plugin>2.10</maven.checkstyle.plugin>
        <maven.surefire.plugin>2.16</maven.surefire.plugin>
        <maven.failsafe.plugin>2.16</maven.failsafe.plugin>
        <maven.cobertura.plugin>2.6</maven.cobertura.plugin>
        <maven.findbugs.plugin>2.5.2</maven.findbugs.plugin>
        <!-- Need to use same version of pmd as used by sonar, hence NOT using latest maven-pmd-plugin
         See http://docs.codehaus.org/pages/diffpages.action?pageId=230397163&originalId=231739482
         See http://pmd.sourceforge.net/pmd-4.3/rules/index.html -->
        <maven.pmd.plugin>2.7.1</maven.pmd.plugin>
        <maven.versions.plugin>1.3.1</maven.versions.plugin>

        <scala.version>2.10</scala.version>
        <scala.version.full>2.10.3</scala.version.full>

        <akka.version>2.2.0</akka.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputDirectory>target</project.reporting.outputDirectory>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.7</java.version>
    </properties>

    <repositories>
        <!-- ... -->
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>Sonatype OSS Snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.typesafe</groupId>
                <artifactId>config</artifactId>
                <version>1.0.2</version>
            </dependency>

            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version.full}</version>
            </dependency>

            <dependency>
                <groupId>org.specs2</groupId>
                <artifactId>specs2_${scala.version}</artifactId>
                <version>2.2.3</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-testkit_${scala.version}</artifactId>
                <version>${akka.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.7</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectj.version}</version>
            </dependency>

            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>${aspectj.version}</version>
            </dependency>

            <dependency>
                <groupId>com.indeed</groupId>
                <artifactId>java-dogstatsd-client</artifactId>
                <version>2.0.7</version>
            </dependency>

            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-actor_${scala.version}</artifactId>
                <version>${akka.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <extensions>
            <extension>
                <groupId>org.eigengo.quality</groupId>
                <artifactId>java</artifactId>
                <version>0.1-SNAPSHOT</version>
            </extension>
        </extensions>

        <plugins>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.1.6</version>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <scalaVersion>${scala.version.full}</scalaVersion>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin}</version>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <configuration>
                            <argLine>-javaagent:${aspectj.agent}</argLine> 
                            <excludes>
                                <!-- Exclude integration tests so that they can be run on a seperate target -->
                                <exclude>**/*IntegrationTest.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.plugin}</version>
                <executions>
                    <execution>
                        <configuration>
                            <argLine>-javaagent:${aspectj.agent}</argLine> 
                            <includes>
                                <!-- Include the integration tests to be run on this target -->
                                <include>**/*IntegrationTest.java</include>
                            </includes>
                        </configuration>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.plugin}</version>

                <dependencies>
                    <dependency>
                        <groupId>org.eigengo.quality</groupId>
                        <artifactId>java</artifactId>
                        <version>0.1-SNAPSHOT</version>
                    </dependency>
                </dependencies>

                <executions>
                    <execution>
                        <id>default-checkstyle-checks</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <configLocation>checkstyle.xml</configLocation>
                            <consoleOutput>true</consoleOutput>
                            <logViolationsToConsole>true</logViolationsToConsole>
                            <violationSeverity>warning</violationSeverity>
                            <failOnViolation>true</failOnViolation>
                        </configuration>
                    </execution>
                </executions>
                <!-- Use -Dcheckstyle.skipExec=true to bypass -->
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${maven.findbugs.plugin}</version>
                <executions>
                    <execution>
                        <id>default-findbugs-checks</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <includeFilterFile>findbugs.xml</includeFilterFile>
                            <failOnError>false</failOnError>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven.pmd.plugin}</version>
                <configuration>
                    <failOnViolation>true</failOnViolation>
                    <failurePriority>3</failurePriority>
                    <aggregate>true</aggregate>
                    <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                    <!-- The minimum tokens before a violation -->
                    <minimumTokens>100</minimumTokens>
                    <!-- Turn off if no xref report -->
                    <linkXRef>true</linkXRef>
                    <verbose>true</verbose>
                    <targetJdk>${java.version}</targetJdk>
                    <rulesets>
                        <ruleset>pmd.xml</ruleset>
                    </rulesets>
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                            <goal>pmd</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.4.1</version>
                <!-- See http://maven.apache.org/maven-release/maven-release-plugin/index.html -->
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <!-- goals run during release:perform -->
                    <goals>package deploy -DskipTests -DskipITs</goals>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>